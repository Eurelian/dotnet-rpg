// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_rpg.Data;

namespace dotnet_rpg.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            SkillsId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 3
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 212, 119, 118, 182, 190, 246, 237, 132, 3, 79, 106, 235, 251, 70, 134, 11, 76, 236, 87, 93, 196, 139, 255, 118, 49, 126, 243, 1, 53, 201, 173, 127, 244, 98, 181, 59, 254, 102, 105, 78, 181, 71, 212, 191, 240, 52, 117, 194, 138, 34, 53, 99, 76, 243, 169, 43, 238, 226, 207, 65, 16, 129, 109, 122 },
                            PasswordSalt = new byte[] { 39, 13, 100, 61, 173, 117, 172, 15, 92, 246, 105, 141, 103, 14, 40, 58, 196, 49, 101, 14, 177, 226, 141, 108, 220, 91, 41, 94, 130, 175, 142, 37, 57, 197, 1, 58, 74, 97, 64, 169, 162, 98, 91, 128, 131, 18, 106, 199, 130, 249, 44, 227, 29, 17, 218, 205, 29, 162, 1, 234, 38, 252, 41, 208, 18, 77, 229, 10, 192, 244, 26, 163, 130, 188, 187, 194, 66, 62, 223, 199, 1, 224, 235, 68, 159, 199, 236, 14, 184, 187, 24, 172, 52, 56, 2, 134, 181, 63, 134, 171, 217, 71, 252, 213, 6, 22, 235, 240, 16, 67, 23, 247, 13, 207, 132, 157, 204, 226, 137, 15, 4, 16, 90, 6, 20, 90, 196, 47 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 212, 119, 118, 182, 190, 246, 237, 132, 3, 79, 106, 235, 251, 70, 134, 11, 76, 236, 87, 93, 196, 139, 255, 118, 49, 126, 243, 1, 53, 201, 173, 127, 244, 98, 181, 59, 254, 102, 105, 78, 181, 71, 212, 191, 240, 52, 117, 194, 138, 34, 53, 99, 76, 243, 169, 43, 238, 226, 207, 65, 16, 129, 109, 122 },
                            PasswordSalt = new byte[] { 39, 13, 100, 61, 173, 117, 172, 15, 92, 246, 105, 141, 103, 14, 40, 58, 196, 49, 101, 14, 177, 226, 141, 108, 220, 91, 41, 94, 130, 175, 142, 37, 57, 197, 1, 58, 74, 97, 64, 169, 162, 98, 91, 128, 131, 18, 106, 199, 130, 249, 44, 227, 29, 17, 218, 205, 29, 162, 1, 234, 38, 252, 41, 208, 18, 77, 229, 10, 192, 244, 26, 163, 130, 188, 187, 194, 66, 62, 223, 199, 1, 224, 235, 68, 159, 199, 236, 14, 184, 187, 24, 172, 52, 56, 2, 134, 181, 63, 134, 171, 217, 71, 252, 213, 6, 22, 235, 240, 16, 67, 23, 247, 13, 207, 132, 157, 204, 226, 137, 15, 4, 16, 90, 6, 20, 90, 196, 47 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_rpg.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.HasOne("dotnet_rpg.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("dotnet_rpg.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("dotnet_rpg.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
